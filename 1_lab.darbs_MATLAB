Um = [-1 0.3 1.5 2.5 3.2];
Im = [1.1 2.2 2.1 3.2 4.7] *1e-3;
plot(Um, Im, 'o-')
%megināsim pielaikot 2.kārtas polinomu
%polyfit - polynomial fitting
%C=polyfit(x, y, N) N-polinoma kārta
%C - POLINOMA KOEFICIENTI
C = polyfit(Um, Im, 2)
%uzzīmēsim kas iznāca
U = -1:0.01:3.2;
I = C(1)*U.^2+C(2)*U+C(3);
plot(Um, Im, 'o' , U, I)
% tagad paņemsim 3. kārtas polinomu
C = polyfit(Um, Im, 3)
U = -1:0.01:3.2;
I = C(1)*U.^3+C(2)*U.^2+C(3)*U+C(4);
% matlabam ir speciālā funkcija kas sastāda polinomu un to aprēķina
plot(Um, Im, 'o' , U, I)
%sintakse yy = polyval(C,xx);
I = polyval(C,U)
plot(Um,Im, 'o',U,I)
%pielaikot un uzzīmēt 4.kārtas polinomu
C = polyfit(Um, Im, 4)
U = -1:0.01:3.2;
I = polyval(C,U)
plot(Um,Im, 'o',U,I)
%pielaikot un uzzīmēt 1.kārtas polinomu
C = polyfit(Um, Im, 1)
I = polyval(C,U)
plot(Um,Im, 'o',U,I)
%uzraksti uz grafika
xlabel('U,V')
ylabel('I,A')
title('I = f(U)')
legend('mērijumu dati', 'pielaikotais polinoms')
grid

%grafiku ieldāšana datorā un nolasīšana ar peli
A = imread('bilde1.png');
B = imread('bilde2.png');
figure(1), image(A)
figure(2), image([500 800],[1 0],B)
set(gca, 'YDir', 'normal')
%[x,y] = ginput(10)
